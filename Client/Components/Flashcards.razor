@using BlazorApp.Shared
@using BlazorApp.Client.Components
@inject HttpClient Http

@if (flashcards == null || flashcards.Length == 0)
{
    <p><em>Loading flashcards...</em></p>
}
else
{
    <h6>Flashcard: @(i + 1) / @flashcards.Length</h6>
    <h6>Category: @active.Category</h6>
    <h5>Question: @active.Question</h5>
    @if (show)
    {
        <h5>Answer: @active.Answer</h5>
    }
    else
    {
        <h5>Answer: </h5>
    }
    <button @onclick="PrevCard">&lt</button>
    <button @onclick="ToggleAnswer">Show/Hide Answer</button>
    <button @onclick="NextCard">&gt</button>
}

@code {
    [Parameter]
    public List<string> Categories { get; set; }

    [Parameter]
    public bool ShouldShuffle { get; set; }

    private Flashcard[] flashcards = new Flashcard[] { };
    private bool show = false;
    private int i = 0;
    private Flashcard active;

    void PrevCard()
    {
        show = false;
        i = i > 0 ? i - 1 : flashcards.Length - 1;
        active = flashcards[i];
    }

    void NextCard()
    {
        show = false;
        i = i < flashcards.Length - 1 ? i + 1 : 0;
        active = flashcards[i];
    }

    void ToggleAnswer()
    {
        show = !show;
    }

    private string FormatQuery(List<string> inputStrings)
    {
        if (inputStrings == null || inputStrings.Count == 0)
        {
            return string.Empty; // Return an empty string if the input list is empty
        }

        // string.Join to concatenate the categories with percent signs between each
        string concatenatedString = string.Join("%", inputStrings);

        return concatenatedString;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Format the query to server and get the flashcards
            string queryString = FormatQuery(Categories);
            string fullUrl = $"/api/FlashcardsByCategories?categories={queryString}";
            flashcards = await Http.GetFromJsonAsync<Flashcard[]>(fullUrl) ?? new Flashcard[] { };

            if (ShouldShuffle)
            {
                Random random = new Random();
                random.Shuffle(flashcards);
            }

            active = flashcards[0];
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

}